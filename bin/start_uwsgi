#!/bin/bash

#
# uWSGI startup script for: birdseye server
#

# == Helper: Get value from config file.
function config_get {
  python -c "from backend.config.settings import SERVER; print SERVER['$1']"
}

# Enable python2.7 SCL if present
PY27_SCL=/opt/rh/python27/enable
if [ -r $PY27_SCL ]; then
  echo "[i] Python 2.7 SCL detected"
  source $PY27_SCL
fi


BASEDIR=$(dirname $0)

# Get absolute basedirectory
APPDIR=`python -c "import os; print(os.path.abspath('$BASEDIR/../'));"`

# Operate from application directory
cd $APPDIR



# Enable virtual env
echo "[i] Loading virtualenv (venv)"
source ./venv/bin/activate

# Get static files from
STATIC_ROOT=$APPDIR/backend/static


#### BEGIN CONFIGURATION ####
# Warning: Do not edit this file.
# Edit: /etc/birdseye/birdseye.conf instead
#

# == Load configuration
BIND_STATS=$(config_get listen_stats)
BIND=$(config_get listen_http)

USER=$(config_get user)
GROUP=$(config_get group)

NUM_WORKERS=$(config_get workers)
NUM_THREADS=$(config_get threads)

TIMEOUT=$(config_get timeout)

LOG_LEVEL=$(config_get loglevel)
PID_FILE=$(config_get pidfile)

#### END CONFIGURATION ####

# == Config interpolations

# Only override user / group if run as root
if [ $(id -u) != 0 ]; then
  USER=$(id -u)
  GROUP=$(id -g)
fi


# == Launch server
echo "[i] Starting uWSGI: $BIND (uid: $USER, gid: $GROUP, th: $NUM_THREADS, procs: $NUM_WORKERS)"
echo "    Stats: $BIND_STATS"

# Start uwsgi
exec ./venv/bin/uwsgi \
  --die-on-term \
  --http   $BIND \
  --stats  $BIND_STATS \
  --uid    $USER \
  --gid    $GROUP \
  --venv   ./venv/ \
  --disable-logging \
  --module=backend.server:app \
  --static-map /static=$STATIC_ROOT \
  --threads   $NUM_THREADS \
  --processes $NUM_WORKERS \
  --pidfile   $PID_FILE

