# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-05 12:01
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='As',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('version', models.IntegerField(default=6)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='IpMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('median_rtt', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remote_peering.Ip')),
            ],
        ),
        migrations.CreateModel(
            name='Ixp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('peeringdb_id', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('continent', models.CharField(max_length=80)),
                ('country', models.CharField(max_length=80)),
                ('city', models.CharField(max_length=80)),
                ('ixps', models.ManyToManyField(to='remote_peering.Ixp')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=80, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remote_peering.As')),
                ('ixps', models.ManyToManyField(to='remote_peering.Ixp')),
            ],
        ),
        migrations.AddField(
            model_name='ixp',
            name='locations',
            field=models.ManyToManyField(to='remote_peering.Location'),
        ),
        migrations.AddField(
            model_name='ixp',
            name='members',
            field=models.ManyToManyField(to='remote_peering.Member'),
        ),
        migrations.AddField(
            model_name='ip',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remote_peering.Member'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together=set([('continent', 'country', 'city')]),
        ),
    ]
